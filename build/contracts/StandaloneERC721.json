{
  "contractName": "StandaloneERC721",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mintWithTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "minters",
          "type": "address[]"
        },
        {
          "name": "pausers",
          "type": "address[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.7+commit.6da8b019\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mintWithTokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"symbol\",\"type\":\"string\"},{\"name\":\"minters\",\"type\":\"address[]\"},{\"name\":\"pausers\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"initialize()\":{\"details\":\"Constructor function\"},\"initialize(string,string)\":{\"details\":\"Constructor function\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mintWithTokenURI(address,uint256,string)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Gets the token name\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"pause()\":{\"details\":\"called by the owner to pause, triggers stopped state\"},\"paused()\":{\"return\":\"true if the contract is paused, false otherwise.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"symbol()\":{\"details\":\"Gets the token symbol\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"unpause()\":{\"details\":\"called by the owner to unpause, returns to normal state\"}},\"title\":\"Standard ERC721 token, with minting and pause functionality. \"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/StandaloneERC721.sol\":\"StandaloneERC721\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/frangio/oz/eth-pkg-contracts/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0d4306da5305cb78f09c70c18ec86dbc66f22fa5ade90edc20e1ab88e16d4d10\",\"urls\":[\"bzzr://47885dccac32ee543284e93f21a5f62c499076b04d01b12ff67aefffbbdcbd34\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/access/Roles.sol\":{\"keccak256\":\"0x75481aaa988c5e9fbc91b4f695678806579c04e0ad56907978c1ca5c7e92a682\",\"urls\":[\"bzzr://da472135eb9268d863825ea26e227a9f8980c54bd32e0764d61711acca59fc89\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x68b80bf82d12c347f9c48644c19ad1b0f23048702a5661c4dcc30f2844eec87e\",\"urls\":[\"bzzr://0052776b645ffd75c4a970b5a10b068730905c277721300dd9aee81beb5a16b8\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0x29a1dfa6012d46d003a9483304a4c00b190de1ae51b0868c8a6e04d20bfe8785\",\"urls\":[\"bzzr://5e89b972d28eb2cf57c2f1060d778b2b8b6f57114415765057dbde1aa4411473\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x982e18d2e3df98e3339f70f955a4d1fb78411a29963d0ea34621759eef67e86d\",\"urls\":[\"bzzr://a5438906da44343a09c6b47666d3649f269d9d156f2109e147e21595b2284363\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x0c965fac47588d2fd480fa86602359952bc60a12112d079574a104355e412de5\",\"urls\":[\"bzzr://4ca877ed5db72bdb8e2a6885d3dd8e8f564110c639d2bd16f441d227b67a2955\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xc48ee580d20820cc0ef122b2acc9bf8836731dd8b9671cc03d21a12e3ab14976\",\"urls\":[\"bzzr://744cf3b8280d4a050ad0771e2ed0d7d41bbddfa40a541933d46bb31007a2e4a9\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0xbafa850bc322e320545b88204fc3a20494ea8ca3319cb4bb1b693676490db578\",\"urls\":[\"bzzr://7e08e647723b7e8c3a3af2a51685cf45fc936cd8e1fa4e5fa153cac8afa0f94e\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x18d16e8fb4e47dcdb081284851397ab979dcdc531cd2de6a37639b2d267899fb\",\"urls\":[\"bzzr://98b1c5a12f9b6f5c44c9844b76348199241534cde1bbce93f977e0200b87a2cb\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0xe5590e5970b17dd5f54f564509b61eb8bbcabead29cb2cd3565670f48a2f9760\",\"urls\":[\"bzzr://2e884b2b4147bf81bbd04c67b6c842779e101553c18f6bc5f2409618fd732145\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x59c6ec85683ab550e17c410b76a4a83dde833f1d0acd0bb21beebe1d194cd74a\",\"urls\":[\"bzzr://1b94edd403b2f7b18bf05f8eb9dc3f03ebea55ad6707be7ae3be0f175efa19b9\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721MetadataMintable.sol\":{\"keccak256\":\"0xdcc6b3f84583d93ed7a2b8db57d18a03ea7c72188c724b095a6e7f7c4cd6da16\",\"urls\":[\"bzzr://baaa3ad421539e92608cacd2bd906038df41466084eafb3991af2bb2b92e18d0\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721Pausable.sol\":{\"keccak256\":\"0x0df3951064864a133f62cffcb0d2cdc41e58cdb6f544c4481d6a2390a49a052e\",\"urls\":[\"bzzr://b6143722bf793055755901536895e54a0220f9cfd64ce4372a645d85b5fa79d4\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x19af40d91f2ff44aec865fa295a18efa10f5d293feed39477dca2d13e7450628\",\"urls\":[\"bzzr://8611907e2938eef10665cb0bdb0c708d05054860c991d24e6dd731bdcca21e3c\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xffc0c5550c3cdd7a4adeaf2280829181e6cf5d93aefccc6b2beb931f69feeae6\",\"urls\":[\"bzzr://09bdae31f8052296d6f112b5d02dd1f2ba270d86ceaf4606f89a309652eadea5\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0x743dd23f873ebc16f752041a789f768c450fa21b0a95dde9f95ce5e88a249893\",\"urls\":[\"bzzr://f6054720ccf7f7187c6109bf45b75647fef6a15ac836905bf7680eb423cace89\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xeb8a266ef2da0aa60eea704031902ffd28b2d13dd0e8f5b69bcfb8415f2dad85\",\"urls\":[\"bzzr://393e9843d41c0652f115378cc58083c4acc4d83f7999fe22932d5e237c215d3f\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/StandaloneERC721.sol\":{\"keccak256\":\"0xf5a6a260167d926831972d92a9e25e6fa1b43f7f4c9749335223d465c7e32b91\",\"urls\":[\"bzzr://10ace3fa9736fe2478a0b4cd3343c1077edc164c09558b86caed80a7d00bbf77\"]},\"/home/frangio/oz/eth-pkg-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzzr://e45c5a995f57637b2300a376647ee345cc9cb30ee1984735091fcd4b10ff3500\"]}},\"version\":1}",
  "bytecode": "0x60806040526139f3806100136000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80636ef8d66d1161010457806398650275116100a2578063c4d66de811610071578063c4d66de814610ba2578063c87b56dd14610be6578063d94cc0e014610c8d578063e985e9c514610f07576101da565b806398650275146109e7578063a22cb465146109f1578063aa271e1a14610a41578063b88d4fde14610a9d576101da565b806382dc1ec4116100de57806382dc1ec4146108d25780638456cb591461091657806395d89b4114610920578063983b2d56146109a3576101da565b80636ef8d66d1461086657806370a08231146108705780638129fc1c146108c8576101da565b80633f4ba83a1161017c5780634f6ccce71161014b5780634f6ccce71461069757806350bb4e7f146106d95780635c975abb146107d65780636352211e146107f8576101da565b80633f4ba83a1461047157806342842e0e1461047b57806346fbf68e146104e95780634cd88b7614610545576101da565b8063095ea7b3116101b8578063095ea7b31461033557806318160ddd1461038357806323b872dd146103a15780632f745c591461040f576101da565b806301ffc9a7146101df57806306fdde0314610244578063081812fc146102c7575b600080fd5b61022a600480360360208110156101f557600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f83565b604051808215151515815260200191505060405180910390f35b61024c610feb565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028c578082015181840152602081019050610271565b50505050905090810190601f1680156102b95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102f3600480360360208110156102dd57600080fd5b810190808035906020019092919050505061108d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103816004803603604081101561034b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110dc565b005b61038b611105565b6040518082815260200191505060405180910390f35b61040d600480360360608110156103b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611112565b005b61045b6004803603604081101561042557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061113d565b6040518082815260200191505060405180910390f35b6104796111b0565b005b6104e76004803603606081101561049157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112b7565b005b61052b600480360360208110156104ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112d7565b604051808215151515815260200191505060405180910390f35b6106956004803603604081101561055b57600080fd5b810190808035906020019064010000000081111561057857600080fd5b82018360208201111561058a57600080fd5b803590602001918460018302840111640100000000831117156105ac57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561060f57600080fd5b82018360208201111561062157600080fd5b8035906020019184600183028401116401000000008311171561064357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112f5565b005b6106c3600480360360208110156106ad57600080fd5b8101908080359060200190929190505050611445565b6040518082815260200191505060405180910390f35b6107bc600480360360608110156106ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561073657600080fd5b82018360208201111561074857600080fd5b8035906020019184600183028401116401000000008311171561076a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611479565b604051808215151515815260200191505060405180910390f35b6107de6114ff565b604051808215151515815260200191505060405180910390f35b6108246004803603602081101561080e57600080fd5b8101908080359060200190929190505050611517565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61086e611593565b005b6108b26004803603602081101561088657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115a5565b6040518082815260200191505060405180910390f35b6108d061162e565b005b610914600480360360208110156108e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061174e565b005b61091e6117bf565b005b6109286118c7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561096857808201518184015260208101905061094d565b50505050905090810190601f1680156109955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6109e5600480360360208110156109b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611969565b005b6109ef6119da565b005b610a3f60048036036040811015610a0757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506119ec565b005b610a8360048036036020811015610a5757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a15565b604051808215151515815260200191505060405180910390f35b610ba060048036036080811015610ab357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b1a57600080fd5b820183602082011115610b2c57600080fd5b80359060200191846001830284011164010000000083111715610b4e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a33565b005b610be460048036036020811015610bb857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a59565b005b610c1260048036036020811015610bfc57600080fd5b8101908080359060200190929190505050611b73565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c52578082015181840152602081019050610c37565b50505050905090810190601f168015610c7f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610f0560048036036080811015610ca357600080fd5b8101908080359060200190640100000000811115610cc057600080fd5b820183602082011115610cd257600080fd5b80359060200191846001830284011164010000000083111715610cf457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d5757600080fd5b820183602082011115610d6957600080fd5b80359060200191846001830284011164010000000083111715610d8b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610dee57600080fd5b820183602082011115610e0057600080fd5b80359060200191846020830284011164010000000083111715610e2257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e8257600080fd5b820183602082011115610e9457600080fd5b80359060200191846020830284011164010000000083111715610eb657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050611c3a565b005b610f6960048036036040811015610f1d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611de9565b604051808215151515815260200191505060405180910390f35b600060336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060d28054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110835780601f1061105857610100808354040283529160200191611083565b820191906000526020600020905b81548152906001019060200180831161106657829003601f168201915b5050505050905090565b600061109882611e7d565b6110a157600080fd5b6067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61019f60009054906101000a900460ff16156110f757600080fd5b6111018282611eef565b5050565b6000609e80549050905090565b61019f60009054906101000a900460ff161561112d57600080fd5b6111388383836120d6565b505050565b6000611148836115a5565b821061115357600080fd5b609c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061119d57fe5b9060005260206000200154905092915050565b6111c06111bb61214c565b6112d7565b611215576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806138b06030913960400191505060405180910390fd5b61019f60009054906101000a900460ff1661122f57600080fd5b600061019f60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61127461214c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6112d283838360405180602001604052806000815250611a33565b505050565b60006112ee8261016c61215490919063ffffffff16565b9050919050565b600060019054906101000a900460ff168061131457506113136121e6565b5b8061132b57506000809054906101000a900460ff16155b611380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156113d0576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6113d86121f7565b6113e157600080fd5b8260d290805190602001906113f79291906137de565b508160d3908051906020019061140e9291906137de565b5061141f635b5e139f60e01b61220e565b80156114405760008060016101000a81548160ff0219169083151502179055505b505050565b600061144f611105565b821061145a57600080fd5b609e828154811061146757fe5b90600052602060002001549050919050565b600061148b61148661214c565b611a15565b6114e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806139186030913960400191505060405180910390fd5b6114ea84846122ae565b6114f483836122cf565b600190509392505050565b600061019f60009054906101000a900460ff16905090565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561158a57600080fd5b80915050919050565b6115a361159e61214c565b61230d565b565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115e057600080fd5b611627606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612368565b9050919050565b600060019054906101000a900460ff168061164d575061164c6121e6565b5b8061166457506000809054906101000a900460ff16155b6116b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611709576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6117116121f7565b61171a57600080fd5b61172a63780e9d6360e01b61220e565b801561174b5760008060016101000a81548160ff0219169083151502179055505b50565b61175e61175961214c565b6112d7565b6117b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806138b06030913960400191505060405180910390fd5b6117bc81612376565b50565b6117cf6117ca61214c565b6112d7565b611824576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806138b06030913960400191505060405180910390fd5b61019f60009054906101000a900460ff161561183f57600080fd5b600161019f60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861188461214c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b606060d38054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561195f5780601f106119345761010080835404028352916020019161195f565b820191906000526020600020905b81548152906001019060200180831161194257829003601f168201915b5050505050905090565b61197961197461214c565b611a15565b6119ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806139186030913960400191505060405180910390fd5b6119d7816123d1565b50565b6119ea6119e561214c565b61242c565b565b61019f60009054906101000a900460ff1615611a0757600080fd5b611a118282612487565b5050565b6000611a2c8261010761215490919063ffffffff16565b9050919050565b611a3e848484611112565b611a4a8484848461263f565b611a5357600080fd5b50505050565b600060019054906101000a900460ff1680611a785750611a776121e6565b5b80611a8f57506000809054906101000a900460ff16155b611ae4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611b34576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611b3c6121f7565b611b4557600080fd5b611b4e8261282f565b8015611b6f5760008060016101000a81548160ff0219169083151502179055505b5050565b6060611b7e82611e7d565b611b8757600080fd5b60d460008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c2e5780601f10611c0357610100808354040283529160200191611c2e565b820191906000526020600020905b815481529060010190602001808311611c1157829003601f168201915b50505050509050919050565b600060019054906101000a900460ff1680611c595750611c586121e6565b5b80611c7057506000809054906101000a900460ff16155b611cc5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611d15576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611d1d612954565b611d2561162e565b611d2f85856112f5565b611d3830612a6b565b611d413061242c565b611d4a30611a59565b611d533061230d565b60008090505b8351811015611d8957611d7e848281518110611d7157fe5b60200260200101516123d1565b806001019050611d59565b5060008090505b8251811015611dc057611db5838281518110611da857fe5b6020026020010151612376565b806001019050611d90565b508015611de25760008060016101000a81548160ff0219169083151502179055505b5050505050565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000611efa82611517565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611f81576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806139766021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16611fa061214c565b73ffffffffffffffffffffffffffffffffffffffff161480611fcf5750611fce81611fc961214c565b611de9565b5b612024576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806138e06038913960400191505060405180910390fd5b826067600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6120e76120e161214c565b82612b96565b61213c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806139976031913960400191505060405180910390fd5b612147838383612c2b565b505050565b600033905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561218f57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080303b90506000811491505090565b60006122096380ac58cd60e01b610f83565b905090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561224157600080fd5b600160336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6122b88282612c4f565b6122c28282612d95565b6122cb81612e5c565b5050565b6122d882611e7d565b6122e157600080fd5b8060d4600084815260200190815260200160002090805190602001906123089291906137de565b505050565b6123228161016c612ea890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b600081600001549050919050565b61238b8161016c612f5390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b6123e681610107612f5390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61244181610107612ea890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b61248f61214c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b806069600061253d61214c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166125ea61214c565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60006126608473ffffffffffffffffffffffffffffffffffffffff16612fff565b61266d5760019050612827565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a0261269361214c565b8887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561274f578082015181840152602081019050612734565b50505050905090810190601f16801561277c5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561279e57600080fd5b505af11580156127b2573d6000803e3d6000fd5b505050506040513d60208110156127c857600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600060019054906101000a900460ff168061284e575061284d6121e6565b5b8061286557506000809054906101000a900460ff16155b6128ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561290a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61291382613012565b600061019f60006101000a81548160ff02191690831515021790555080156129505760008060016101000a81548160ff0219169083151502179055505b5050565b600060019054906101000a900460ff168061297357506129726121e6565b5b8061298a57506000809054906101000a900460ff16155b6129df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612a2f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612a37613129565b612a476380ac58cd60e01b61220e565b8015612a685760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680612a8a5750612a896121e6565b5b80612aa157506000809054906101000a900460ff16155b612af6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612b46576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612b4e6121f7565b612b5757600080fd5b612b5f613238565b612b6857600080fd5b612b718261324f565b8015612b925760008060016101000a81548160ff0219169083151502179055505b5050565b600080612ba283611517565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612c1157508373ffffffffffffffffffffffffffffffffffffffff16612bf98461108d565b73ffffffffffffffffffffffffffffffffffffffff16145b80612c225750612c218185611de9565b5b91505092915050565b612c36838383613366565b612c408382613529565b612c4a8282612d95565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612c8957600080fd5b612c9281611e7d565b15612c9c57600080fd5b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612d35606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136c7565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b609c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050609d600083815260200190815260200160002081905550609c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b609e80549050609f600083815260200190815260200160002081905550609e81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ee257600080fd5b612eec8282612154565b612ef557600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612f8d57600080fd5b612f978282612154565b15612fa157600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080823b905060008111915050919050565b600060019054906101000a900460ff168061303157506130306121e6565b5b8061304857506000809054906101000a900460ff16155b61309d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156130ed576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6130f6826112d7565b6131045761310382612376565b5b80156131255760008060016101000a81548160ff0219169083151502179055505b5050565b600060019054906101000a900460ff168061314857506131476121e6565b5b8061315f57506000809054906101000a900460ff16155b6131b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015613204576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6132146301ffc9a760e01b61220e565b80156132355760008060016101000a81548160ff0219169083151502179055505b50565b600061324a635b5e139f60e01b610f83565b905090565b600060019054906101000a900460ff168061326e575061326d6121e6565b5b8061328557506000809054906101000a900460ff16155b6132da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561332a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61333382611a15565b61334157613340826123d1565b5b80156133625760008060016101000a81548160ff0219169083151502179055505b5050565b8273ffffffffffffffffffffffffffffffffffffffff1661338682611517565b73ffffffffffffffffffffffffffffffffffffffff16146133a657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156133e057600080fd5b6133e9816136dd565b613430606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061379b565b613477606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136c7565b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006135816001609c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506137be90919063ffffffff16565b90506000609d600084815260200190815260200160002054905081811461366e576000609c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106135ee57fe5b9060005260206000200154905080609c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061364657fe5b906000526020600020018190555081609d600083815260200190815260200160002081905550505b609c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036136c0919061385e565b5050505050565b6001816000016000828254019250508190555050565b600073ffffffffffffffffffffffffffffffffffffffff166067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146137985760006067600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6137b3600182600001546137be90919063ffffffff16565b816000018190555050565b6000828211156137cd57600080fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061381f57805160ff191683800117855561384d565b8280016001018555821561384d579182015b8281111561384c578251825591602001919060010190613831565b5b50905061385a919061388a565b5090565b81548183558181111561388557818360005260206000209182019101613884919061388a565b5b505050565b6138ac91905b808211156138a8576000816000905550600101613890565b5090565b9056fe506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c654552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a165627a7a72305820dd4d468644ac9ea1c02a341f83d3b73fb3f020431692b2659f627bdb8a96857e0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c80636ef8d66d1161010457806398650275116100a2578063c4d66de811610071578063c4d66de814610ba2578063c87b56dd14610be6578063d94cc0e014610c8d578063e985e9c514610f07576101da565b806398650275146109e7578063a22cb465146109f1578063aa271e1a14610a41578063b88d4fde14610a9d576101da565b806382dc1ec4116100de57806382dc1ec4146108d25780638456cb591461091657806395d89b4114610920578063983b2d56146109a3576101da565b80636ef8d66d1461086657806370a08231146108705780638129fc1c146108c8576101da565b80633f4ba83a1161017c5780634f6ccce71161014b5780634f6ccce71461069757806350bb4e7f146106d95780635c975abb146107d65780636352211e146107f8576101da565b80633f4ba83a1461047157806342842e0e1461047b57806346fbf68e146104e95780634cd88b7614610545576101da565b8063095ea7b3116101b8578063095ea7b31461033557806318160ddd1461038357806323b872dd146103a15780632f745c591461040f576101da565b806301ffc9a7146101df57806306fdde0314610244578063081812fc146102c7575b600080fd5b61022a600480360360208110156101f557600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050610f83565b604051808215151515815260200191505060405180910390f35b61024c610feb565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561028c578082015181840152602081019050610271565b50505050905090810190601f1680156102b95780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102f3600480360360208110156102dd57600080fd5b810190808035906020019092919050505061108d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103816004803603604081101561034b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506110dc565b005b61038b611105565b6040518082815260200191505060405180910390f35b61040d600480360360608110156103b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611112565b005b61045b6004803603604081101561042557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061113d565b6040518082815260200191505060405180910390f35b6104796111b0565b005b6104e76004803603606081101561049157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506112b7565b005b61052b600480360360208110156104ff57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112d7565b604051808215151515815260200191505060405180910390f35b6106956004803603604081101561055b57600080fd5b810190808035906020019064010000000081111561057857600080fd5b82018360208201111561058a57600080fd5b803590602001918460018302840111640100000000831117156105ac57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561060f57600080fd5b82018360208201111561062157600080fd5b8035906020019184600183028401116401000000008311171561064357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112f5565b005b6106c3600480360360208110156106ad57600080fd5b8101908080359060200190929190505050611445565b6040518082815260200191505060405180910390f35b6107bc600480360360608110156106ef57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561073657600080fd5b82018360208201111561074857600080fd5b8035906020019184600183028401116401000000008311171561076a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611479565b604051808215151515815260200191505060405180910390f35b6107de6114ff565b604051808215151515815260200191505060405180910390f35b6108246004803603602081101561080e57600080fd5b8101908080359060200190929190505050611517565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61086e611593565b005b6108b26004803603602081101561088657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115a5565b6040518082815260200191505060405180910390f35b6108d061162e565b005b610914600480360360208110156108e857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061174e565b005b61091e6117bf565b005b6109286118c7565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561096857808201518184015260208101905061094d565b50505050905090810190601f1680156109955780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6109e5600480360360208110156109b957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611969565b005b6109ef6119da565b005b610a3f60048036036040811015610a0757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035151590602001909291905050506119ec565b005b610a8360048036036020811015610a5757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a15565b604051808215151515815260200191505060405180910390f35b610ba060048036036080811015610ab357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610b1a57600080fd5b820183602082011115610b2c57600080fd5b80359060200191846001830284011164010000000083111715610b4e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a33565b005b610be460048036036020811015610bb857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611a59565b005b610c1260048036036020811015610bfc57600080fd5b8101908080359060200190929190505050611b73565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610c52578082015181840152602081019050610c37565b50505050905090810190601f168015610c7f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610f0560048036036080811015610ca357600080fd5b8101908080359060200190640100000000811115610cc057600080fd5b820183602082011115610cd257600080fd5b80359060200191846001830284011164010000000083111715610cf457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d5757600080fd5b820183602082011115610d6957600080fd5b80359060200191846001830284011164010000000083111715610d8b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610dee57600080fd5b820183602082011115610e0057600080fd5b80359060200191846020830284011164010000000083111715610e2257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e8257600080fd5b820183602082011115610e9457600080fd5b80359060200191846020830284011164010000000083111715610eb657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f820116905080830192505050505050509192919290505050611c3a565b005b610f6960048036036040811015610f1d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611de9565b604051808215151515815260200191505060405180910390f35b600060336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b606060d28054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110835780601f1061105857610100808354040283529160200191611083565b820191906000526020600020905b81548152906001019060200180831161106657829003601f168201915b5050505050905090565b600061109882611e7d565b6110a157600080fd5b6067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61019f60009054906101000a900460ff16156110f757600080fd5b6111018282611eef565b5050565b6000609e80549050905090565b61019f60009054906101000a900460ff161561112d57600080fd5b6111388383836120d6565b505050565b6000611148836115a5565b821061115357600080fd5b609c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061119d57fe5b9060005260206000200154905092915050565b6111c06111bb61214c565b6112d7565b611215576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806138b06030913960400191505060405180910390fd5b61019f60009054906101000a900460ff1661122f57600080fd5b600061019f60006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61127461214c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b6112d283838360405180602001604052806000815250611a33565b505050565b60006112ee8261016c61215490919063ffffffff16565b9050919050565b600060019054906101000a900460ff168061131457506113136121e6565b5b8061132b57506000809054906101000a900460ff16155b611380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156113d0576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6113d86121f7565b6113e157600080fd5b8260d290805190602001906113f79291906137de565b508160d3908051906020019061140e9291906137de565b5061141f635b5e139f60e01b61220e565b80156114405760008060016101000a81548160ff0219169083151502179055505b505050565b600061144f611105565b821061145a57600080fd5b609e828154811061146757fe5b90600052602060002001549050919050565b600061148b61148661214c565b611a15565b6114e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806139186030913960400191505060405180910390fd5b6114ea84846122ae565b6114f483836122cf565b600190509392505050565b600061019f60009054906101000a900460ff16905090565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561158a57600080fd5b80915050919050565b6115a361159e61214c565b61230d565b565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115e057600080fd5b611627606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612368565b9050919050565b600060019054906101000a900460ff168061164d575061164c6121e6565b5b8061166457506000809054906101000a900460ff16155b6116b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611709576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6117116121f7565b61171a57600080fd5b61172a63780e9d6360e01b61220e565b801561174b5760008060016101000a81548160ff0219169083151502179055505b50565b61175e61175961214c565b6112d7565b6117b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806138b06030913960400191505060405180910390fd5b6117bc81612376565b50565b6117cf6117ca61214c565b6112d7565b611824576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806138b06030913960400191505060405180910390fd5b61019f60009054906101000a900460ff161561183f57600080fd5b600161019f60006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861188461214c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b606060d38054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561195f5780601f106119345761010080835404028352916020019161195f565b820191906000526020600020905b81548152906001019060200180831161194257829003601f168201915b5050505050905090565b61197961197461214c565b611a15565b6119ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806139186030913960400191505060405180910390fd5b6119d7816123d1565b50565b6119ea6119e561214c565b61242c565b565b61019f60009054906101000a900460ff1615611a0757600080fd5b611a118282612487565b5050565b6000611a2c8261010761215490919063ffffffff16565b9050919050565b611a3e848484611112565b611a4a8484848461263f565b611a5357600080fd5b50505050565b600060019054906101000a900460ff1680611a785750611a776121e6565b5b80611a8f57506000809054906101000a900460ff16155b611ae4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611b34576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611b3c6121f7565b611b4557600080fd5b611b4e8261282f565b8015611b6f5760008060016101000a81548160ff0219169083151502179055505b5050565b6060611b7e82611e7d565b611b8757600080fd5b60d460008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c2e5780601f10611c0357610100808354040283529160200191611c2e565b820191906000526020600020905b815481529060010190602001808311611c1157829003601f168201915b50505050509050919050565b600060019054906101000a900460ff1680611c595750611c586121e6565b5b80611c7057506000809054906101000a900460ff16155b611cc5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015611d15576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b611d1d612954565b611d2561162e565b611d2f85856112f5565b611d3830612a6b565b611d413061242c565b611d4a30611a59565b611d533061230d565b60008090505b8351811015611d8957611d7e848281518110611d7157fe5b60200260200101516123d1565b806001019050611d59565b5060008090505b8251811015611dc057611db5838281518110611da857fe5b6020026020010151612376565b806001019050611d90565b508015611de25760008060016101000a81548160ff0219169083151502179055505b5050505050565b6000606960008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000806066600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b6000611efa82611517565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611f81576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806139766021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16611fa061214c565b73ffffffffffffffffffffffffffffffffffffffff161480611fcf5750611fce81611fc961214c565b611de9565b5b612024576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806138e06038913960400191505060405180910390fd5b826067600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6120e76120e161214c565b82612b96565b61213c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806139976031913960400191505060405180910390fd5b612147838383612c2b565b505050565b600033905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561218f57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080303b90506000811491505090565b60006122096380ac58cd60e01b610f83565b905090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141561224157600080fd5b600160336000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b6122b88282612c4f565b6122c28282612d95565b6122cb81612e5c565b5050565b6122d882611e7d565b6122e157600080fd5b8060d4600084815260200190815260200160002090805190602001906123089291906137de565b505050565b6123228161016c612ea890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e60405160405180910390a250565b600081600001549050919050565b61238b8161016c612f5390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f860405160405180910390a250565b6123e681610107612f5390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b61244181610107612ea890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b61248f61214c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612530576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f4552433732313a20617070726f766520746f2063616c6c65720000000000000081525060200191505060405180910390fd5b806069600061253d61214c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166125ea61214c565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b60006126608473ffffffffffffffffffffffffffffffffffffffff16612fff565b61266d5760019050612827565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a0261269361214c565b8887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561274f578082015181840152602081019050612734565b50505050905090810190601f16801561277c5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561279e57600080fd5b505af11580156127b2573d6000803e3d6000fd5b505050506040513d60208110156127c857600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b600060019054906101000a900460ff168061284e575061284d6121e6565b5b8061286557506000809054906101000a900460ff16155b6128ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561290a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61291382613012565b600061019f60006101000a81548160ff02191690831515021790555080156129505760008060016101000a81548160ff0219169083151502179055505b5050565b600060019054906101000a900460ff168061297357506129726121e6565b5b8061298a57506000809054906101000a900460ff16155b6129df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612a2f576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612a37613129565b612a476380ac58cd60e01b61220e565b8015612a685760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680612a8a5750612a896121e6565b5b80612aa157506000809054906101000a900460ff16155b612af6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015612b46576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b612b4e6121f7565b612b5757600080fd5b612b5f613238565b612b6857600080fd5b612b718261324f565b8015612b925760008060016101000a81548160ff0219169083151502179055505b5050565b600080612ba283611517565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612c1157508373ffffffffffffffffffffffffffffffffffffffff16612bf98461108d565b73ffffffffffffffffffffffffffffffffffffffff16145b80612c225750612c218185611de9565b5b91505092915050565b612c36838383613366565b612c408382613529565b612c4a8282612d95565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612c8957600080fd5b612c9281611e7d565b15612c9c57600080fd5b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612d35606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136c7565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b609c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050609d600083815260200190815260200160002081905550609c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b609e80549050609f600083815260200190815260200160002081905550609e81908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612ee257600080fd5b612eec8282612154565b612ef557600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612f8d57600080fd5b612f978282612154565b15612fa157600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080823b905060008111915050919050565b600060019054906101000a900460ff168061303157506130306121e6565b5b8061304857506000809054906101000a900460ff16155b61309d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff1615905080156130ed576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6130f6826112d7565b6131045761310382612376565b5b80156131255760008060016101000a81548160ff0219169083151502179055505b5050565b600060019054906101000a900460ff168061314857506131476121e6565b5b8061315f57506000809054906101000a900460ff16155b6131b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff161590508015613204576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6132146301ffc9a760e01b61220e565b80156132355760008060016101000a81548160ff0219169083151502179055505b50565b600061324a635b5e139f60e01b610f83565b905090565b600060019054906101000a900460ff168061326e575061326d6121e6565b5b8061328557506000809054906101000a900460ff16155b6132da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180613948602e913960400191505060405180910390fd5b60008060019054906101000a900460ff16159050801561332a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b61333382611a15565b61334157613340826123d1565b5b80156133625760008060016101000a81548160ff0219169083151502179055505b5050565b8273ffffffffffffffffffffffffffffffffffffffff1661338682611517565b73ffffffffffffffffffffffffffffffffffffffff16146133a657600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156133e057600080fd5b6133e9816136dd565b613430606860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061379b565b613477606860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206136c7565b816066600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006135816001609c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506137be90919063ffffffff16565b90506000609d600084815260200190815260200160002054905081811461366e576000609c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106135ee57fe5b9060005260206000200154905080609c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061364657fe5b906000526020600020018190555081609d600083815260200190815260200160002081905550505b609c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036136c0919061385e565b5050505050565b6001816000016000828254019250508190555050565b600073ffffffffffffffffffffffffffffffffffffffff166067600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146137985760006067600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6137b3600182600001546137be90919063ffffffff16565b816000018190555050565b6000828211156137cd57600080fd5b600082840390508091505092915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061381f57805160ff191683800117855561384d565b8280016001018555821561384d579182015b8281111561384c578251825591602001919060010190613831565b5b50905061385a919061388a565b5090565b81548183558181111561388557818360005260206000209182019101613884919061388a565b5b505050565b6138ac91905b808211156138a8576000816000905550600101613890565b5090565b9056fe506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c654552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a65644552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a165627a7a72305820dd4d468644ac9ea1c02a341f83d3b73fb3f020431692b2659f627bdb8a96857e0029",
  "sourceMap": "327:984:74:-;;;;;;;;;",
  "deployedSourceMap": "327:984:74:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;327:984:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;870:131:37;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;870:131:37;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1346:83:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1346:83:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4192:151:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4192:151:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;468:110:68;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;468:110:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2316:94:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;719:140:68;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;719:140:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1982:182:62;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1982:182:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1364:117:40;;;:::i;:::-;;6704:132:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6704:132:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;643:107:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;643:107:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;783:321:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;783:321:65;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;783:321:65;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;783:321:65;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;783:321:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;783:321:65;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;783:321:65;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;783:321:65;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;783:321:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;783:321:65;;;;;;;;;;;;;;;:::i;:::-;;2747:148:62;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2747:148:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;840:209:66;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;840:209:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;840:209:66;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;840:209:66;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;840:209:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;840:209:66;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;646:76:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2894:177:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2894:177:60;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;852:77:11;;;:::i;:::-;;2516:160:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2516:160:60;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1227:242:62;;;:::i;:::-;;756:90:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;756:90:11;;;;;;;;;;;;;;;;;;;:::i;:::-;;1159:115:40;;;:::i;:::-;;1537:87:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1537:87:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;756:90:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;756:90:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;852:77;;;:::i;:::-;;584:129:68;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;584:129:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;643:107:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;643:107:10;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7543:211:60;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7543:211:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7543:211:60;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7543:211:60;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7543:211:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7543:211:60;;;;;;;;;;;;;;;:::i;:::-;;316:146:68;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;316:146:68;;;;;;;;;;;;;;;;;;;:::i;:::-;;1823:151:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1823:151:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1823:151:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;462:847:74;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;462:847:74;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;462:847:74;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;462:847:74;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;462:847:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;462:847:74;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;462:847:74;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;462:847:74;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;462:847:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;462:847:74;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;462:847:74;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;462:847:74;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;462:847:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;462:847:74;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;462:847:74;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;462:847:74;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;462:847:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;462:847:74;;;;;;;;;;;;;;;:::i;:::-;;5205:145:60;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5205:145:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;870:131:37;938:4;961:20;:33;982:11;961:33;;;;;;;;;;;;;;;;;;;;;;;;;;;954:40;;870:131;;;:::o;1346:83:65:-;1385:13;1417:5;1410:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1346:83;:::o;4192:151:60:-;4251:7;4278:16;4286:7;4278;:16::i;:::-;4270:25;;;;;;4312:15;:24;4328:7;4312:24;;;;;;;;;;;;;;;;;;;;;4305:31;;4192:151;;;:::o;468:110:68:-;875:7:40;;;;;;;;;;;874:8;866:17;;;;;;545:26:68;559:2;563:7;545:13;:26::i;:::-;468:110;;:::o;2316:94:62:-;2360:7;2386:10;:17;;;;2379:24;;2316:94;:::o;719:140:68:-;875:7:40;;;;;;;;;;;874:8;866:17;;;;;;815:37:68;834:4;840:2;844:7;815:18;:37::i;:::-;719:140;;;:::o;1982:182:62:-;2062:7;2097:16;2107:5;2097:9;:16::i;:::-;2089:5;:24;2081:33;;;;;;2131:12;:19;2144:5;2131:19;;;;;;;;;;;;;;;2151:5;2131:26;;;;;;;;;;;;;;;;2124:33;;1982:182;;;;:::o;1364:117:40:-;544:22:11;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1046:7:40;;;;;;;;;;;1038:16;;;;;;1432:5;1422:7;;:15;;;;;;;;;;;;;;;;;;1452:22;1461:12;:10;:12::i;:::-;1452:22;;;;;;;;;;;;;;;;;;;;;;1364:117::o;6704:132:60:-;6790:39;6807:4;6813:2;6817:7;6790:39;;;;;;;;;;;;:16;:39::i;:::-;6704:132;;;:::o;643:107:11:-;699:4;722:21;735:7;722:8;:12;;:21;;;;:::i;:::-;715:28;;643:107;;;:::o;783:321:65:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;882:28:65;:26;:28::i;:::-;874:37;;;;;;930:4;922:5;:12;;;;;;;;;;;;:::i;:::-;;954:6;944:7;:16;;;;;;;;;;;;:::i;:::-;;1048:49;546:10;1067:29;;1048:18;:49::i;:::-;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;783:321:65;;;:::o;2747:148:62:-;2805:7;2840:13;:11;:13::i;:::-;2832:5;:21;2824:30;;;;;;2871:10;2882:5;2871:17;;;;;;;;;;;;;;;;2864:24;;2747:148;;;:::o;840:209:66:-;946:4;544:22:10;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;962:18:66;968:2;972:7;962:5;:18::i;:::-;990:31;1003:7;1012:8;990:12;:31::i;:::-;1038:4;1031:11;;840:209;;;;;:::o;646:76:40:-;685:4;708:7;;;;;;;;;;;701:14;;646:76;:::o;2894:177:60:-;2949:7;2968:13;2984:11;:20;2996:7;2984:20;;;;;;;;;;;;;;;;;;;;;2968:36;;3039:1;3022:19;;:5;:19;;;;3014:28;;;;;;3059:5;3052:12;;;2894:177;;;:::o;852:77:11:-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;2516:160:60:-;2571:7;2615:1;2598:19;;:5;:19;;;;2590:28;;;;;;2635:34;:17;:24;2653:5;2635:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2628:41;;2516:160;;;:::o;1227:242:62:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;1286:28:62;:26;:28::i;:::-;1278:37;;;;;;1411:51;951:10;1430:31;;1411:18;:51::i;:::-;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1227:242:62;:::o;756:90:11:-;544:22;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;:::-;756:90;:::o;1159:115:40:-;544:22:11;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:7:40;;;;;;;;;;;874:8;866:17;;;;;;1228:4;1218:7;;:14;;;;;;;;;;;;;;;;;;1247:20;1254:12;:10;:12::i;:::-;1247:20;;;;;;;;;;;;;;;;;;;;;;1159:115::o;1537:87:65:-;1578:13;1610:7;1603:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1537:87;:::o;756:90:10:-;544:22;553:12;:10;:12::i;:::-;544:8;:22::i;:::-;536:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:19;831:7;820:10;:19::i;:::-;756:90;:::o;852:77::-;895:27;909:12;:10;:12::i;:::-;895:13;:27::i;:::-;852:77::o;584:129:68:-;875:7:40;;;;;;;;;;;874:8;866:17;;;;;;669:37:68;693:2;697:8;669:23;:37::i;:::-;584:129;;:::o;643:107:10:-;699:4;722:21;735:7;722:8;:12;;:21;;;;:::i;:::-;715:28;;643:107;;;:::o;7543:211:60:-;7649:31;7662:4;7668:2;7672:7;7649:12;:31::i;:::-;7698:48;7721:4;7727:2;7731:7;7740:5;7698:22;:48::i;:::-;7690:57;;;;;;7543:211;;;;:::o;316:146:68:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;389:28:68;:26;:28::i;:::-;381:37;;;;;;428:27;448:6;428:19;:27::i;:::-;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;316:146:68;;:::o;1823:151:65:-;1881:13;1914:16;1922:7;1914;:16::i;:::-;1906:25;;;;;;1948:10;:19;1959:7;1948:19;;;;;;;;;;;1941:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:151;;;:::o;462:847:74:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;605:19:74;:17;:19::i;:::-;634:29;:27;:29::i;:::-;673:39;699:4;705:6;673:25;:39::i;:::-;792:48;834:4;792:33;:48::i;:::-;850:28;872:4;850:13;:28::i;:::-;889:40;923:4;889:25;:40::i;:::-;939:28;961:4;939:13;:28::i;:::-;1114:9;1126:1;1114:13;;1109:92;1133:7;:14;1129:1;:18;1109:92;;;1168:22;1179:7;1187:1;1179:10;;;;;;;;;;;;;;1168;:22::i;:::-;1149:3;;;;;1109:92;;;;1216:9;1228:1;1216:13;;1211:92;1235:7;:14;1231:1;:18;1211:92;;;1270:22;1281:7;1289:1;1281:10;;;;;;;;;;;;;;1270;:22::i;:::-;1251:3;;;;;1211:92;;;;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;462:847:74;;;;;:::o;5205:145:60:-;5285:4;5308:18;:25;5327:5;5308:25;;;;;;;;;;;;;;;:35;5334:8;5308:35;;;;;;;;;;;;;;;;;;;;;;;;;5301:42;;5205:145;;;;:::o;7948:152::-;8005:4;8021:13;8037:11;:20;8049:7;8037:20;;;;;;;;;;;;;;;;;;;;;8021:36;;8091:1;8074:19;;:5;:19;;;;8067:26;;;7948:152;;;:::o;3492:415::-;3555:13;3571:16;3579:7;3571;:16::i;:::-;3555:32;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3689:5;3673:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3698:37;3715:5;3722:12;:10;:12::i;:::-;3698:16;:37::i;:::-;3673:62;3665:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3855:2;3828:15;:24;3844:7;3828:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3892:7;3888:2;3872:28;;3881:5;3872:28;;;;;;;;;;;;3492:415;;;:::o;5784:287::-;5926:41;5945:12;:10;:12::i;:::-;5959:7;5926:18;:41::i;:::-;5918:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6032:32;6046:4;6052:2;6056:7;6032:13;:32::i;:::-;5784:287;;;:::o;791:88:0:-;836:7;862:10;855:17;;791:88;:::o;786:162:8:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;1409:467:78:-;1456:4;1797:10;1842:7;1830:20;1824:26;;1870:1;1864:2;:7;1857:14;;;1409:467;:::o;2190:123:60:-;2244:4;2267:39;1345:10;2285:20;;2267:17;:39::i;:::-;2260:46;;2190:123;:::o;1080:158:37:-;1170:10;1155:25;;:11;:25;;;;;1147:34;;;;;;1227:4;1191:20;:33;1212:11;1191:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1080:158;:::o;3764:196:62:-;3827:24;3839:2;3843:7;3827:11;:24::i;:::-;3862:40;3890:2;3894:7;3862:27;:40::i;:::-;3913;3945:7;3913:31;:40::i;:::-;3764:196;;:::o;2211:144:65:-;2296:16;2304:7;2296;:16::i;:::-;2288:25;;;;;;2345:3;2323:10;:19;2334:7;2323:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;2211:144;;:::o;1060:127:11:-;1119:24;1135:7;1119:8;:15;;:24;;;;:::i;:::-;1172:7;1158:22;;;;;;;;;;;;1060:127;:::o;1062:112:30:-;1127:7;1153;:14;;;1146:21;;1062:112;;;:::o;935:119:11:-;991:21;1004:7;991:8;:12;;:21;;;;:::i;:::-;1039:7;1027:20;;;;;;;;;;;;935:119;:::o;::10:-;991:21;1004:7;991:8;:12;;:21;;;;:::i;:::-;1039:7;1027:20;;;;;;;;;;;;935:119;:::o;1060:127::-;1119:24;1135:7;1119:8;:15;;:24;;;;:::i;:::-;1172:7;1158:22;;;;;;;;;;;;1060:127;:::o;4635:249:60:-;4720:12;:10;:12::i;:::-;4714:18;;:2;:18;;;;4706:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4812:8;4773:18;:32;4792:12;:10;:12::i;:::-;4773:32;;;;;;;;;;;;;;;:36;4806:2;4773:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;4864:2;4835:42;;4850:12;:10;:12::i;:::-;4835:42;;;4868:8;4835:42;;;;;;;;;;;;;;;;;;;;;;4635:249;;:::o;11298:349::-;11419:4;11444:15;:2;:13;;;:15::i;:::-;11439:58;;11482:4;11475:11;;;;11439:58;11507:13;11539:2;11523:36;;;11560:12;:10;:12::i;:::-;11574:4;11580:7;11589:5;11523:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11523:72:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11523:72:60;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11523:72:60;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11523:72:60;;;;;;;;;;;;;;;;11507:88;;831:10;11623:16;;11613:26;;;:6;:26;;;;11605:35;;;11298:349;;;;;;;:::o;433:127:40:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;498:29:40;520:6;498:21;:29::i;:::-;548:5;538:7;;:15;;;;;;;;;;;;;;;;;;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;433:127:40;;:::o;1979:205:60:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;2030:19:60;:17;:19::i;:::-;2137:40;1345:10;2156:20;;2137:18;:40::i;:::-;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;1979:205:60;:::o;338:203:66:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;411:28:66;:26;:28::i;:::-;403:37;;;;;;458:36;:34;:36::i;:::-;450:45;;;;;;505:29;527:6;505:21;:29::i;:::-;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;338:203:66;;:::o;8460:246:60:-;8545:4;8561:13;8577:16;8585:7;8577;:16::i;:::-;8561:32;;8622:5;8611:16;;:7;:16;;;:51;;;;8655:7;8631:31;;:20;8643:7;8631:11;:20::i;:::-;:31;;;8611:51;:87;;;;8666:32;8683:5;8690:7;8666:16;:32::i;:::-;8611:87;8603:96;;;8460:246;;;;:::o;3270:239:62:-;3355:38;3375:4;3381:2;3385:7;3355:19;:38::i;:::-;3404:47;3437:4;3443:7;3404:32;:47::i;:::-;3462:40;3490:2;3494:7;3462:27;:40::i;:::-;3270:239;;;:::o;8949:259:60:-;9034:1;9020:16;;:2;:16;;;;9012:25;;;;;;9056:16;9064:7;9056;:16::i;:::-;9055:17;9047:26;;;;;;9107:2;9084:11;:20;9096:7;9084:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9119:33;:17;:21;9137:2;9119:21;;;;;;;;;;;;;;;:31;:33::i;:::-;9193:7;9189:2;9168:33;;9185:1;9168:33;;;;;;;;;;;;8949:259;;:::o;5218:183:62:-;5331:12;:16;5344:2;5331:16;;;;;;;;;;;;;;;:23;;;;5302:17;:26;5320:7;5302:26;;;;;;;;;;;:52;;;;5364:12;:16;5377:2;5364:16;;;;;;;;;;;;;;;5386:7;5364:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5364:30:62;;;;;;;;;;;;;;;;;;;;;;5218:183;;:::o;5596:161::-;5699:10;:17;;;;5672:15;:24;5688:7;5672:24;;;;;;;;;;;:44;;;;5726:10;5742:7;5726:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5726:24:62;;;;;;;;;;;;;;;;;;;;;;5596:161;:::o;514:184:8:-;612:1;593:21;;:7;:21;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;259:181::-;354:1;335:21;;:7;:21;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;463:616:75:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;361:137:11:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;431:16:11;440:6;431:8;:16::i;:::-;426:66;;463:18;474:6;463:10;:18::i;:::-;426:66;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;361:137:11;;:::o;681:98:37:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;732:40:37;312:10;751:20;;732:18;:40::i;:::-;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;681:98:37;:::o;1110:132:65:-;1164:4;1187:48;546:10;1205:29;;1187:17;:48::i;:::-;1180:55;;1110:132;:::o;361:137:10:-;1024:12:78;;;;;;;;;;;:31;;;;1040:15;:13;:15::i;:::-;1024:31;:47;;;;1060:11;;;;;;;;;;;1059:12;1024:47;1016:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;;;;;;1151:13;1129:35;;1174:14;1170:80;;;1213:4;1198:12;;:19;;;;;;;;;;;;;;;;;;1239:4;1225:11;;:18;;;;;;;;;;;;;;;;;;1170:80;431:16:10;440:6;431:8;:16::i;:::-;426:66;;463:18;474:6;463:10;:18::i;:::-;426:66;1268:14:78;1264:55;;;1307:5;1292:12;;:20;;;;;;;;;;;;;;;;;;1264:55;361:137:10;;:::o;10408:362:60:-;10521:4;10501:24;;:16;10509:7;10501;:16::i;:::-;:24;;;10493:33;;;;;;10558:1;10544:16;;:2;:16;;;;10536:25;;;;;;10572:23;10587:7;10572:14;:23::i;:::-;10606:35;:17;:23;10624:4;10606:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10651:33;:17;:21;10669:2;10651:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10718:2;10695:11;:20;10707:7;10695:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10755:7;10751:2;10736:27;;10745:4;10736:27;;;;;;;;;;;;10408:362;;;:::o;6372:1128:62:-;6634:22;6659:32;6689:1;6659:12;:18;6672:4;6659:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;6634:57;;6701:18;6722:17;:26;6740:7;6722:26;;;;;;;;;;;;6701:47;;6866:14;6852:10;:28;6848:323;;6896:19;6918:12;:18;6931:4;6918:18;;;;;;;;;;;;;;;6937:14;6918:34;;;;;;;;;;;;;;;;6896:56;;7000:11;6967:12;:18;6980:4;6967:18;;;;;;;;;;;;;;;6986:10;6967:30;;;;;;;;;;;;;;;:44;;;;7116:10;7083:17;:30;7101:11;7083:30;;;;;;;;;;;:43;;;;6848:323;;7257:12;:18;7270:4;7257:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;6372:1128;;;;:::o;1180:89:30:-;1261:1;1243:7;:14;;;:19;;;;;;;;;;;1180:89;:::o;11808:171:60:-;11907:1;11871:38;;:15;:24;11887:7;11871:24;;;;;;;;;;;;;;;;;;;;;:38;;;11867:106;;11960:1;11925:15;:24;11941:7;11925:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;11867:106;11808:171;:::o;1275:108:30:-;1355:21;1374:1;1355:7;:14;;;:18;;:21;;;;:::i;:::-;1338:7;:14;;:38;;;;1275:108;:::o;1211:145:42:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;327:984:74:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"@openzeppelin/upgrades/contracts/Initializable.sol\";\nimport \"./ERC721.sol\";\nimport \"./ERC721Enumerable.sol\";\nimport \"./ERC721Metadata.sol\";\nimport \"./ERC721MetadataMintable.sol\";\nimport \"./ERC721Pausable.sol\";\n\n\n/**\n * @title Standard ERC721 token, with minting and pause functionality.\n *\n */\ncontract StandaloneERC721\n    is Initializable, ERC721, ERC721Enumerable, ERC721Metadata, ERC721MetadataMintable, ERC721Pausable\n{\n    function initialize(string memory name, string memory symbol, address[] memory minters, address[] memory pausers) public initializer {\n        ERC721.initialize();\n        ERC721Enumerable.initialize();\n        ERC721Metadata.initialize(name, symbol);\n\n        // Initialize the minter and pauser roles, and renounce them\n        ERC721MetadataMintable.initialize(address(this));\n        _removeMinter(address(this));\n\n        ERC721Pausable.initialize(address(this));\n        _removePauser(address(this));\n\n        // Add the requested minters and pausers (this can be done after renouncing since\n        // these are the internal calls)\n        for (uint256 i = 0; i < minters.length; ++i) {\n            _addMinter(minters[i]);\n        }\n\n        for (uint256 i = 0; i < pausers.length; ++i) {\n            _addPauser(pausers[i]);\n        }\n    }\n}\n",
  "sourcePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/StandaloneERC721.sol",
  "ast": {
    "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/StandaloneERC721.sol",
    "exportedSymbols": {
      "StandaloneERC721": [
        9536
      ]
    },
    "id": 9537,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9418,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:74"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 9419,
        "nodeType": "ImportDirective",
        "scope": 9537,
        "sourceUnit": 9742,
        "src": "25:60:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 9420,
        "nodeType": "ImportDirective",
        "scope": 9537,
        "sourceUnit": 8406,
        "src": "86:22:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 9421,
        "nodeType": "ImportDirective",
        "scope": 9537,
        "sourceUnit": 8804,
        "src": "109:32:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 9422,
        "nodeType": "ImportDirective",
        "scope": 9537,
        "sourceUnit": 9009,
        "src": "142:30:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "./ERC721MetadataMintable.sol",
        "id": 9423,
        "nodeType": "ImportDirective",
        "scope": 9537,
        "sourceUnit": 9079,
        "src": "173:38:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721Pausable.sol",
        "file": "./ERC721Pausable.sol",
        "id": 9424,
        "nodeType": "ImportDirective",
        "scope": 9537,
        "sourceUnit": 9224,
        "src": "212:30:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9425,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9741,
              "src": "360:13:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9741",
                "typeString": "contract Initializable"
              }
            },
            "id": 9426,
            "nodeType": "InheritanceSpecifier",
            "src": "360:13:74"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9427,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8405,
              "src": "375:6:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$8405",
                "typeString": "contract ERC721"
              }
            },
            "id": 9428,
            "nodeType": "InheritanceSpecifier",
            "src": "375:6:74"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9429,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8803,
              "src": "383:16:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$8803",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 9430,
            "nodeType": "InheritanceSpecifier",
            "src": "383:16:74"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9431,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9008,
              "src": "401:14:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$9008",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 9432,
            "nodeType": "InheritanceSpecifier",
            "src": "401:14:74"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9433,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9078,
              "src": "417:22:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$9078",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 9434,
            "nodeType": "InheritanceSpecifier",
            "src": "417:22:74"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9435,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9223,
              "src": "441:14:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$9223",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 9436,
            "nodeType": "InheritanceSpecifier",
            "src": "441:14:74"
          }
        ],
        "contractDependencies": [
          26,
          1556,
          1679,
          5120,
          5267,
          5370,
          8405,
          8803,
          9008,
          9078,
          9223,
          9329,
          9359,
          9400,
          9741
        ],
        "contractKind": "contract",
        "documentation": "@title Standard ERC721 token, with minting and pause functionality.\n ",
        "fullyImplemented": true,
        "id": 9536,
        "linearizedBaseContracts": [
          9536,
          9223,
          5370,
          1679,
          9078,
          1556,
          9008,
          9400,
          8803,
          9359,
          8405,
          9329,
          5120,
          5267,
          26,
          9741
        ],
        "name": "StandaloneERC721",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9534,
              "nodeType": "Block",
              "src": "595:714:74",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9451,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8405,
                        "src": "605:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$8405_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 9453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7895,
                      "src": "605:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:19:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9455,
                  "nodeType": "ExpressionStatement",
                  "src": "605:19:74"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9456,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8803,
                        "src": "634:16:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$8803_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 9458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8492,
                      "src": "634:27:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "634:29:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9460,
                  "nodeType": "ExpressionStatement",
                  "src": "634:29:74"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9464,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9438,
                        "src": "699:4:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9465,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9440,
                        "src": "705:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9461,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9008,
                        "src": "673:14:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$9008_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 9463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8909,
                      "src": "673:25:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 9466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "673:39:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9467,
                  "nodeType": "ExpressionStatement",
                  "src": "673:39:74"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9472,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9928,
                            "src": "834:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 9471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "826:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "826:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9468,
                        "name": "ERC721MetadataMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9078,
                        "src": "792:22:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721MetadataMintable_$9078_$",
                          "typeString": "type(contract ERC721MetadataMintable)"
                        }
                      },
                      "id": 9470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9047,
                      "src": "792:33:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "792:48:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9475,
                  "nodeType": "ExpressionStatement",
                  "src": "792:48:74"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9478,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9928,
                            "src": "872:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 9477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "864:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "864:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9476,
                      "name": "_removeMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1551,
                      "src": "850:13:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "850:28:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9481,
                  "nodeType": "ExpressionStatement",
                  "src": "850:28:74"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9486,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9928,
                            "src": "923:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 9485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "915:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "915:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9482,
                        "name": "ERC721Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9223,
                        "src": "889:14:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Pausable_$9223_$",
                          "typeString": "type(contract ERC721Pausable)"
                        }
                      },
                      "id": 9484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9164,
                      "src": "889:25:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "889:40:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9489,
                  "nodeType": "ExpressionStatement",
                  "src": "889:40:74"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9492,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9928,
                            "src": "961:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 9491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "953:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "953:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9490,
                      "name": "_removePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1674,
                      "src": "939:13:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "939:28:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9495,
                  "nodeType": "ExpressionStatement",
                  "src": "939:28:74"
                },
                {
                  "body": {
                    "id": 9513,
                    "nodeType": "Block",
                    "src": "1154:47:74",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 9508,
                                "name": "minters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9443,
                                "src": "1179:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 9510,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 9509,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9497,
                                "src": "1187:1:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1179:10:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 9507,
                            "name": "_addMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1535,
                            "src": "1168:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 9511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1168:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9512,
                        "nodeType": "ExpressionStatement",
                        "src": "1168:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 9500,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9497,
                      "src": "1129:1:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 9501,
                        "name": "minters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9443,
                        "src": "1133:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 9502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1133:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1129:18:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9514,
                  "initializationExpression": {
                    "assignments": [
                      9497
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9497,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 9514,
                        "src": "1114:9:74",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9496,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1114:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 9499,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 9498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1126:1:74",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1114:13:74"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 9505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1149:3:74",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 9504,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9497,
                        "src": "1151:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9506,
                    "nodeType": "ExpressionStatement",
                    "src": "1149:3:74"
                  },
                  "nodeType": "ForStatement",
                  "src": "1109:92:74"
                },
                {
                  "body": {
                    "id": 9532,
                    "nodeType": "Block",
                    "src": "1256:47:74",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 9527,
                                "name": "pausers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9446,
                                "src": "1281:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 9529,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 9528,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9516,
                                "src": "1289:1:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1281:10:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 9526,
                            "name": "_addPauser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1658,
                            "src": "1270:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 9530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1270:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9531,
                        "nodeType": "ExpressionStatement",
                        "src": "1270:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 9519,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9516,
                      "src": "1231:1:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 9520,
                        "name": "pausers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9446,
                        "src": "1235:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 9521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1235:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1231:18:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9533,
                  "initializationExpression": {
                    "assignments": [
                      9516
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9516,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 9533,
                        "src": "1216:9:74",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9515,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1216:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 9518,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 9517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1228:1:74",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1216:13:74"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 9524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1251:3:74",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 9523,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9516,
                        "src": "1253:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9525,
                    "nodeType": "ExpressionStatement",
                    "src": "1251:3:74"
                  },
                  "nodeType": "ForStatement",
                  "src": "1211:92:74"
                }
              ]
            },
            "documentation": null,
            "id": 9535,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9449,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9448,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9722,
                  "src": "583:11:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "583:11:74"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9438,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 9535,
                  "src": "482:18:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9437,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9440,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 9535,
                  "src": "502:20:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9439,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9443,
                  "name": "minters",
                  "nodeType": "VariableDeclaration",
                  "scope": 9535,
                  "src": "524:24:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9441,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "524:7:74",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9442,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "524:9:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9446,
                  "name": "pausers",
                  "nodeType": "VariableDeclaration",
                  "scope": 9535,
                  "src": "550:24:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9444,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "550:7:74",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9445,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "550:9:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "481:94:74"
            },
            "returnParameters": {
              "id": 9450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "595:0:74"
            },
            "scope": 9536,
            "src": "462:847:74",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 9537,
        "src": "327:984:74"
      }
    ],
    "src": "0:1312:74"
  },
  "legacyAST": {
    "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/StandaloneERC721.sol",
    "exportedSymbols": {
      "StandaloneERC721": [
        9536
      ]
    },
    "id": 9537,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9418,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:74"
      },
      {
        "absolutePath": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 9419,
        "nodeType": "ImportDirective",
        "scope": 9537,
        "sourceUnit": 9742,
        "src": "25:60:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "./ERC721.sol",
        "id": 9420,
        "nodeType": "ImportDirective",
        "scope": 9537,
        "sourceUnit": 8406,
        "src": "86:22:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721Enumerable.sol",
        "file": "./ERC721Enumerable.sol",
        "id": 9421,
        "nodeType": "ImportDirective",
        "scope": 9537,
        "sourceUnit": 8804,
        "src": "109:32:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 9422,
        "nodeType": "ImportDirective",
        "scope": 9537,
        "sourceUnit": 9009,
        "src": "142:30:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721MetadataMintable.sol",
        "file": "./ERC721MetadataMintable.sol",
        "id": 9423,
        "nodeType": "ImportDirective",
        "scope": 9537,
        "sourceUnit": 9079,
        "src": "173:38:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/frangio/oz/eth-pkg-contracts/contracts/token/ERC721/ERC721Pausable.sol",
        "file": "./ERC721Pausable.sol",
        "id": 9424,
        "nodeType": "ImportDirective",
        "scope": 9537,
        "sourceUnit": 9224,
        "src": "212:30:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9425,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9741,
              "src": "360:13:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$9741",
                "typeString": "contract Initializable"
              }
            },
            "id": 9426,
            "nodeType": "InheritanceSpecifier",
            "src": "360:13:74"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9427,
              "name": "ERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8405,
              "src": "375:6:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721_$8405",
                "typeString": "contract ERC721"
              }
            },
            "id": 9428,
            "nodeType": "InheritanceSpecifier",
            "src": "375:6:74"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9429,
              "name": "ERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8803,
              "src": "383:16:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Enumerable_$8803",
                "typeString": "contract ERC721Enumerable"
              }
            },
            "id": 9430,
            "nodeType": "InheritanceSpecifier",
            "src": "383:16:74"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9431,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9008,
              "src": "401:14:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$9008",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 9432,
            "nodeType": "InheritanceSpecifier",
            "src": "401:14:74"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9433,
              "name": "ERC721MetadataMintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9078,
              "src": "417:22:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721MetadataMintable_$9078",
                "typeString": "contract ERC721MetadataMintable"
              }
            },
            "id": 9434,
            "nodeType": "InheritanceSpecifier",
            "src": "417:22:74"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 9435,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9223,
              "src": "441:14:74",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$9223",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 9436,
            "nodeType": "InheritanceSpecifier",
            "src": "441:14:74"
          }
        ],
        "contractDependencies": [
          26,
          1556,
          1679,
          5120,
          5267,
          5370,
          8405,
          8803,
          9008,
          9078,
          9223,
          9329,
          9359,
          9400,
          9741
        ],
        "contractKind": "contract",
        "documentation": "@title Standard ERC721 token, with minting and pause functionality.\n ",
        "fullyImplemented": true,
        "id": 9536,
        "linearizedBaseContracts": [
          9536,
          9223,
          5370,
          1679,
          9078,
          1556,
          9008,
          9400,
          8803,
          9359,
          8405,
          9329,
          5120,
          5267,
          26,
          9741
        ],
        "name": "StandaloneERC721",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9534,
              "nodeType": "Block",
              "src": "595:714:74",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9451,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8405,
                        "src": "605:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$8405_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 9453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7895,
                      "src": "605:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:19:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9455,
                  "nodeType": "ExpressionStatement",
                  "src": "605:19:74"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9456,
                        "name": "ERC721Enumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8803,
                        "src": "634:16:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Enumerable_$8803_$",
                          "typeString": "type(contract ERC721Enumerable)"
                        }
                      },
                      "id": 9458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8492,
                      "src": "634:27:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "634:29:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9460,
                  "nodeType": "ExpressionStatement",
                  "src": "634:29:74"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9464,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9438,
                        "src": "699:4:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9465,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9440,
                        "src": "705:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9461,
                        "name": "ERC721Metadata",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9008,
                        "src": "673:14:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Metadata_$9008_$",
                          "typeString": "type(contract ERC721Metadata)"
                        }
                      },
                      "id": 9463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8909,
                      "src": "673:25:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 9466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "673:39:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9467,
                  "nodeType": "ExpressionStatement",
                  "src": "673:39:74"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9472,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9928,
                            "src": "834:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 9471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "826:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "826:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9468,
                        "name": "ERC721MetadataMintable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9078,
                        "src": "792:22:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721MetadataMintable_$9078_$",
                          "typeString": "type(contract ERC721MetadataMintable)"
                        }
                      },
                      "id": 9470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9047,
                      "src": "792:33:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "792:48:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9475,
                  "nodeType": "ExpressionStatement",
                  "src": "792:48:74"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9478,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9928,
                            "src": "872:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 9477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "864:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "864:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9476,
                      "name": "_removeMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1551,
                      "src": "850:13:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "850:28:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9481,
                  "nodeType": "ExpressionStatement",
                  "src": "850:28:74"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9486,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9928,
                            "src": "923:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 9485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "915:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "915:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9482,
                        "name": "ERC721Pausable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9223,
                        "src": "889:14:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721Pausable_$9223_$",
                          "typeString": "type(contract ERC721Pausable)"
                        }
                      },
                      "id": 9484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9164,
                      "src": "889:25:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "889:40:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9489,
                  "nodeType": "ExpressionStatement",
                  "src": "889:40:74"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9492,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9928,
                            "src": "961:4:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandaloneERC721_$9536",
                              "typeString": "contract StandaloneERC721"
                            }
                          ],
                          "id": 9491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "953:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 9493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "953:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9490,
                      "name": "_removePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1674,
                      "src": "939:13:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "939:28:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9495,
                  "nodeType": "ExpressionStatement",
                  "src": "939:28:74"
                },
                {
                  "body": {
                    "id": 9513,
                    "nodeType": "Block",
                    "src": "1154:47:74",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 9508,
                                "name": "minters",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9443,
                                "src": "1179:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 9510,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 9509,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9497,
                                "src": "1187:1:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1179:10:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 9507,
                            "name": "_addMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1535,
                            "src": "1168:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 9511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1168:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9512,
                        "nodeType": "ExpressionStatement",
                        "src": "1168:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 9500,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9497,
                      "src": "1129:1:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 9501,
                        "name": "minters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9443,
                        "src": "1133:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 9502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1133:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1129:18:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9514,
                  "initializationExpression": {
                    "assignments": [
                      9497
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9497,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 9514,
                        "src": "1114:9:74",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9496,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1114:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 9499,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 9498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1126:1:74",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1114:13:74"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 9505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1149:3:74",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 9504,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9497,
                        "src": "1151:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9506,
                    "nodeType": "ExpressionStatement",
                    "src": "1149:3:74"
                  },
                  "nodeType": "ForStatement",
                  "src": "1109:92:74"
                },
                {
                  "body": {
                    "id": 9532,
                    "nodeType": "Block",
                    "src": "1256:47:74",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 9527,
                                "name": "pausers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9446,
                                "src": "1281:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 9529,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 9528,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9516,
                                "src": "1289:1:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1281:10:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 9526,
                            "name": "_addPauser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1658,
                            "src": "1270:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 9530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1270:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9531,
                        "nodeType": "ExpressionStatement",
                        "src": "1270:22:74"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 9519,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9516,
                      "src": "1231:1:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 9520,
                        "name": "pausers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9446,
                        "src": "1235:7:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 9521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1235:14:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1231:18:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 9533,
                  "initializationExpression": {
                    "assignments": [
                      9516
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 9516,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 9533,
                        "src": "1216:9:74",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 9515,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1216:7:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 9518,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 9517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1228:1:74",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1216:13:74"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 9524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "1251:3:74",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 9523,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9516,
                        "src": "1253:1:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 9525,
                    "nodeType": "ExpressionStatement",
                    "src": "1251:3:74"
                  },
                  "nodeType": "ForStatement",
                  "src": "1211:92:74"
                }
              ]
            },
            "documentation": null,
            "id": 9535,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 9449,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9448,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9722,
                  "src": "583:11:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "583:11:74"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9438,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 9535,
                  "src": "482:18:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9437,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9440,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 9535,
                  "src": "502:20:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 9439,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9443,
                  "name": "minters",
                  "nodeType": "VariableDeclaration",
                  "scope": 9535,
                  "src": "524:24:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9441,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "524:7:74",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9442,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "524:9:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9446,
                  "name": "pausers",
                  "nodeType": "VariableDeclaration",
                  "scope": 9535,
                  "src": "550:24:74",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9444,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "550:7:74",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 9445,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "550:9:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "481:94:74"
            },
            "returnParameters": {
              "id": 9450,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "595:0:74"
            },
            "scope": 9536,
            "src": "462:847:74",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 9537,
        "src": "327:984:74"
      }
    ],
    "src": "0:1312:74"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.7+commit.6da8b019.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-08-15T15:08:57.234Z",
  "devdoc": {
    "methods": {
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "initialize()": {
        "details": "Constructor function"
      },
      "initialize(string,string)": {
        "details": "Constructor function"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mintWithTokenURI(address,uint256,string)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Gets the token name",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "pause()": {
        "details": "called by the owner to pause, triggers stopped state"
      },
      "paused()": {
        "return": "true if the contract is paused, false otherwise."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "symbol()": {
        "details": "Gets the token symbol",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "unpause()": {
        "details": "called by the owner to unpause, returns to normal state"
      }
    },
    "title": "Standard ERC721 token, with minting and pause functionality. "
  },
  "userdoc": {
    "methods": {}
  }
}